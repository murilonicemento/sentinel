services:
  api-gateway:
    image: api-gateway
    build:
      context: ../services/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "7000:8080"
    restart: unless-stopped
    networks:
      - sentinel-network
  ingestion:
    image: ingestion
    build:
      context: ../services/ingestion
      dockerfile: Dockerfile
    container_name: ingestion
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "7001:8080"
    depends_on:
      - postgres
      - redis
      - minio
    restart: unless-stopped
    networks:
      - sentinel-network
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - sentinel-network
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - sentinel-network
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped
    networks:
      - sentinel-network
volumes:
  postgres-data:
  redis-data:
  minio-data:
networks:
  sentinel-network:
  