classDiagram
%% =====================
%% Namespace: Ingestion
%% =====================
%% Domain / Persistence Namespace
namespace Ingestion.Domain {
  class DataSource {
    +Id: Guid
    +Name: string
    +Type: DataSourceTypeEnum
    +Endpoint: string
    +CollectionFrequency: CollectionFrequencyEnum
  }

  class DataCollection {
    +Id: Guid
    +DataSourceIdÇ Guid
    +CollectedAt: DateTime
    +Payload: string
  }

  class SensorSample {
    +Id: Guid
    +DataCollectionId: Guid
    +SensorValue: double
    +Unit: string
    +RecordedAt: DateTime
  }
}

%% Relações de aggregate
DataSource "1" --> "N" DataCollection
DataCollection "1" --> "N" SensorSample

%% Enums
namespace Ingestion.Domain.Enums {
  class DataSourceType {
    <<enumeration>>
    Sensor
    Api
    File
    ExternalSystem
  }

  class CollectionFrequency {
    <<enumeration>>
    Hourly
    Daily
    Weekly
  }
}

%% Namespace de eventos (publicados para downstream)
namespace Ingestion.Events {
    class ClimaticEventDTO {
      +EventId: Guid
      +EventType: string
      +Latitude: double
      +Longitude: double
      +Intensity: double
      +CollectedAt: DateTime
    }
}

%% =====================
%% Namespace: Geospatial
%% =====================
namespace Geospatial {
  class Regiao {
    +id: Guid
    +nome: string
    +poligonoGeoJSON: string
  }
  class ZonaRisco {
    +id: Guid
    +regiaoId: Guid
    +nivel: string
  }
  class EventoNormalizadoDTO {
    +eventoId: Guid
    +tipoEvento: string
    +regiaoId: Guid
    +payloadNormalizado: string
  }
  class RegiaoIntersectadaDTO {
    +eventoId: Guid
    +regiaoId: Guid
    +nomeRegiao: string
    +nivelSuscetibilidade: string
  }
}

ZonaRisco --> Regiao

%% =====================
%% Namespace: Risk
%% =====================
namespace Risk {
  class TipoEvento {
    +id: Guid
    +nome: string
    +descricao: string
  }
  class MatrizRisco {
    +id: Guid
    +tipoEventoId: Guid
    +nivelSeveridade: string
    +curvaIDF: string
  }
}

MatrizRisco --> TipoEvento

%% =====================
%% Namespace: RiskScoring
%% =====================
namespace RiskScoring {
  class AvaliacaoRisco {
    +id: Guid
    +regiaoId: Guid
    +score: int
    +nivel: string
    +justificativa: string
  }
  class RiscoAtualizadoDTO {
    +regiaoId: Guid
    +tipoEvento: string
    +score: int
    +nivel: string
    +justificativa: string
  }
}

AvaliacaoRisco --> RiscoAtualizadoDTO

%% =====================
%% Namespace: Alerting
%% =====================
namespace Alerting {
  class Alerta {
    +id: Guid
    +regiaoId: Guid
    +tipoEvento: string
    +nivel: string
    +emitidoEm: DateTime
  }
  class Destinatario {
    +id: Guid
    +nome: string
    +canalPreferido: string
  }
  class AlertaDTO {
    +alertaId: Guid
    +regiaoId: Guid
    +tipoEvento: string
    +nivel: string
    +canais: string[]
  }
  class ConfirmacaoAlertaDTO {
    +alertaId: Guid
    +destinatarioId: Guid
    +canal: string
    +confirmadoEm: DateTime
  }

}

Alerta --> Destinatario

%% =====================
%% Namespace: Compliance
%% =====================
namespace Compliance {
  class EventoAuditoria {
    +id: Guid
    +tipoEvento: string
    +payload: string
    +criadoEm: DateTime
  }
}

%% =====================
%% Dependências / Fluxo de Eventos
%% =====================
EventoClimaticoDTO --> EventoNormalizadoDTO : publicacao
EventoNormalizadoDTO --> RegiaoIntersectadaDTO : interseção
RegiaoIntersectadaDTO --> RiscoAtualizadoDTO : scoring
RiscoAtualizadoDTO --> AlertaDTO : orquestração
AlertaDTO --> ConfirmacaoAlertaDTO : confirmação
AlertaDTO --> EventoAuditoria : auditoria
